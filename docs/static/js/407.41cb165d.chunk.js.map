{"version":3,"file":"static/js/407.41cb165d.chunk.js","mappings":"2LAAaA,GAAiB,QAC1B,WAAYC,EAAMC,EAAaC,EAASC,EAAOC,IAAW,eACtDC,KAAKL,KAAOA,EACZK,KAAKJ,YAAcA,EACnBI,KAAKH,QAAUA,EACfG,KAAKF,MAAQA,EACbE,KAAKD,SAAWA,CACpB,G,+JCCW,SAASE,IACpB,OAAwBC,EAAAA,EAAAA,KAAgB,eAAjCC,EAAI,KAAEC,EAAO,KACdC,GAAWC,EAAAA,EAAAA,MAqBjB,OACI,UAAC,IAAS,CAACC,UAAU,uBAAsB,WACvC,wBAAI,oBACJ,SAAC,KAAsB,CAACC,yBAvBP,SAACC,GACtBA,EAAMC,iBACN,IACI,IAAMC,EAAO,IAAIjB,EAAAA,EAAkBe,EAAMG,OAAOC,aAAaC,MACzDL,EAAMG,OAAOG,oBAAoBD,MACjCL,EAAMG,OAAOI,gBAAgBF,MAC7BL,EAAMG,OAAOK,cAAcH,MAC3BL,EAAMG,OAAOM,iBAAiBJ,OAE5BK,GAAcC,EAAAA,EAAAA,GAA6BjB,EAAKkB,GAAIV,GAC1DP,EAAQe,GAERG,EAAAA,GAAAA,QAAc,2BAA4B,CAAEC,SAAUD,EAAAA,GAAAA,SAAAA,YACtDjB,EAAS,kBAIb,CAFA,MAAMmB,GACFF,EAAAA,GAAAA,MAAYE,EAAMC,QAAS,CAAEF,SAAUD,EAAAA,GAAAA,SAAAA,WAC3C,CACJ,EAK4EI,YAAY,kBAG5F,C,sGCnCaN,EAA+B,SAACO,EAAQhB,GACjD,IAAMiB,EAAQC,aAAaC,QAAQC,EAAAA,GAC7BC,EAAaJ,EAAQK,KAAKC,MAAMN,GAAS,GAEzCzB,EAAO6B,EAAWG,MAAK,SAAAC,GAAC,OAAIA,EAAEf,KAAOM,CAAM,IACjD,GAAGxB,EAGC,OAFAA,EAAKkC,cAAa,kBAAOlC,EAAKkC,eAAa,CAAE1B,IAC7CkB,aAAaS,QAAQP,EAAAA,EAAiCE,KAAKM,UAAUP,IAC9D7B,EAGX,MAAM,IAAIqC,MAAM,oBACpB,EAEaC,EAAiC,SAACd,EAAQe,GACnD,IAIS,IAJHd,EAAQC,aAAaC,QAAQC,EAAAA,GAC7BC,EAAaJ,EAAQK,KAAKC,MAAMN,GAAS,GAEzCzB,EAAO6B,EAAWG,MAAK,SAAAC,GAAC,OAAIA,EAAEf,KAAOM,CAAM,IACjD,GAAGxB,EAGC,OAFAA,EAAKkC,cAA6E,QAAhE,EAAqB,QAArB,EAAGlC,EAAKkC,qBAAa,aAAlB,EAAoBM,QAAO,SAACC,EAAGC,GAAK,OAAKA,IAAUH,CAAS,WAAC,QAAI,GACtFb,aAAaS,QAAQP,EAAAA,EAAiCE,KAAKM,UAAUP,IAC9D7B,EAGX,MAAM,IAAIqC,MAAM,oBACpB,C","sources":["models/BusinessCardModel.js","pages/CreateBusinessCard.jsx","services/businessCardsService.js"],"sourcesContent":["export class BusinessCardModel {\r\n    constructor(name, description, address, phone, imageUrl) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.address = address;\r\n        this.phone = phone;\r\n        this.imageUrl = imageUrl;\r\n    }\r\n}","import { appendCardToUserLocalStorage } from '../services/businessCardsService';\r\nimport { Container } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { CreateBusinessCard as CreateBusinessCardForm } from '../components';\r\nimport { BusinessCardModel } from '../models/BusinessCardModel';\r\nimport { useUserDetails } from '../context/UserContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function CreateBusinessCard() {\r\n    const [user, setUser] = useUserDetails();\r\n    const navigate = useNavigate();\r\n    const handleSubmitCard = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const card = new BusinessCardModel(event.target.businessName.value,\r\n                event.target.businessDescription.value,\r\n                event.target.businessAddress.value,\r\n                event.target.businessPhone.value,\r\n                event.target.businessImageUrl.value);\r\n            \r\n            const updatedUser = appendCardToUserLocalStorage(user.id, card);\r\n            setUser(updatedUser);\r\n\r\n            toast.success('Card creation completed.', { position: toast.POSITION.TOP_RIGHT });\r\n            navigate('/business-cards');\r\n        }\r\n        catch(error) {\r\n            toast.error(error.message, { position: toast.POSITION.TOP_RIGHT });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"bg-white rounded p-4\">\r\n            <h1>Add a new card</h1>\r\n            <CreateBusinessCardForm createBusinessCardHandle={handleSubmitCard} submitLabel=\"Create card\" />\r\n        </Container>\r\n    );\r\n}","import { USERS_DB_ITEM_KEY_LOCAL_STORAGE } from '../data/constants';\r\n\r\nexport const appendCardToUserLocalStorage = (userId, card) => {\r\n    const users = localStorage.getItem(USERS_DB_ITEM_KEY_LOCAL_STORAGE);\r\n    const usersArray = users ? JSON.parse(users) : [];\r\n\r\n    const user = usersArray.find(x => x.id === userId);\r\n    if(user) {\r\n        user.businessCards = [...user.businessCards, card];\r\n        localStorage.setItem(USERS_DB_ITEM_KEY_LOCAL_STORAGE, JSON.stringify(usersArray));\r\n        return user; \r\n    }\r\n\r\n    throw new Error(\"User wasn't found\");\r\n};\r\n\r\nexport const removeCardFromUserLocalStorage = (userId, cardIndex) => {\r\n    const users = localStorage.getItem(USERS_DB_ITEM_KEY_LOCAL_STORAGE);\r\n    const usersArray = users ? JSON.parse(users) : [];\r\n\r\n    const user = usersArray.find(x => x.id === userId);\r\n    if(user) {\r\n        user.businessCards = user.businessCards?.filter((_, index) => index !== cardIndex) ?? [];\r\n        localStorage.setItem(USERS_DB_ITEM_KEY_LOCAL_STORAGE, JSON.stringify(usersArray));\r\n        return user;\r\n    }\r\n\r\n    throw new Error(\"User wasn't found\");\r\n};"],"names":["BusinessCardModel","name","description","address","phone","imageUrl","this","CreateBusinessCard","useUserDetails","user","setUser","navigate","useNavigate","className","createBusinessCardHandle","event","preventDefault","card","target","businessName","value","businessDescription","businessAddress","businessPhone","businessImageUrl","updatedUser","appendCardToUserLocalStorage","id","toast","position","error","message","submitLabel","userId","users","localStorage","getItem","USERS_DB_ITEM_KEY_LOCAL_STORAGE","usersArray","JSON","parse","find","x","businessCards","setItem","stringify","Error","removeCardFromUserLocalStorage","cardIndex","filter","_","index"],"sourceRoot":""}