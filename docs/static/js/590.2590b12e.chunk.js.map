{"version":3,"file":"static/js/590.2590b12e.chunk.js","mappings":"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","sources":["features/authentication/forms/RegisterForm.jsx","features/authentication/forms/LoginForm.jsx","models/BusinessCardModel.js","pages/BusinessRegister.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nexport default function RegisterForm({ registerHandle, submitLabel }) {\r\n    return (\r\n        <Form onSubmit={registerHandle}>\r\n            <Form.Group className='mb-3'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter your name\" name=\"name\" required minLength={3} maxLength={64} />\r\n            </Form.Group>\r\n            <Form.Group className='mb-3'>\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" required minLength={5} maxLength={64} />\r\n            </Form.Group>\r\n            <Form.Group className='mb-3'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" required minLength={5} maxLength={64} />\r\n            </Form.Group>\r\n            <Button variant=\"dark\" type=\"submit\">\r\n                {submitLabel}\r\n            </Button>\r\n        </Form>\r\n    );\r\n}","import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nexport default function LoginForm({ loginHandle }) {\r\n    return (\r\n        <Form onSubmit={loginHandle}>\r\n            <Form.Group className='mb-3' controlId=\"formEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" name='email' required minLength={5} maxLength={64}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group className='mb-3' controlId=\"formPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Enter password\" name='password' required minLength={5} maxLength={64}/>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"dark\" type=\"submit\">\r\n                Login\r\n            </Button>\r\n        </Form>\r\n    );\r\n}","export class BusinessCardModel {\r\n    constructor(name, description, address, phone, imageUrl) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.address = address;\r\n        this.phone = phone;\r\n        this.imageUrl = imageUrl;\r\n    }\r\n}","import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { registerLocalStorage, checkUserExistance } from '../services/authService';\r\nimport { Container } from 'react-bootstrap';\r\nimport { RegisterForm } from '../features/authentication';\r\nimport { UserType } from '../models/UserModel';\r\nimport { toast } from 'react-toastify';\r\nimport { CreateBusinessCard } from '../components';\r\nimport { BusinessCardModel } from '../models/BusinessCardModel';\r\nimport { FallbackPageMemoizer } from '../context/FallbackContext';\r\n\r\nexport default function BusinessRegister() {\r\n    const navigate = useNavigate();\r\n    const [registerCredentials, setRegisterCredentials] = useState(null);\r\n\r\n    const handleSubmitRegister = (event) => {\r\n        event.preventDefault();\r\n        const regCred = {\r\n            email: event.target.email.value,\r\n            password: event.target.password.value,\r\n            name: event.target.name.value,\r\n            type: UserType.Business\r\n        };\r\n        if (!checkUserExistance(regCred.email)) {\r\n            setRegisterCredentials(regCred);\r\n        }\r\n        else {\r\n            toast.error('Email already exists.', { position: toast.POSITION.TOP_RIGHT });\r\n        }\r\n    };\r\n\r\n    const handleSubmitCard = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const card = new BusinessCardModel(event.target.businessName.value,\r\n                event.target.businessDescription.value,\r\n                event.target.businessAddress.value,\r\n                event.target.businessPhone.value,\r\n                event.target.businessImageUrl.value);\r\n\r\n            registerLocalStorage(registerCredentials.email, registerCredentials.password, registerCredentials.name, UserType.Business, [card]);\r\n            toast.success(`Registration completed, ${registerCredentials.name}.`, { position: toast.POSITION.TOP_RIGHT });\r\n            navigate('/login');\r\n        }\r\n        catch {\r\n            toast.error('Email already exists.', { position: toast.POSITION.TOP_RIGHT });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FallbackPageMemoizer>\r\n            <Container className=\"bg-white rounded p-4\">\r\n                <h1>Business Registration</h1>\r\n                {\r\n                    registerCredentials ?\r\n                        <CreateBusinessCard createBusinessCardHandle={handleSubmitCard} submitLabel=\"Finish registration\" />\r\n                        :\r\n                        <RegisterForm registerHandle={handleSubmitRegister} submitLabel=\"Continue\" />\r\n                }\r\n            </Container>\r\n        </FallbackPageMemoizer>\r\n    );\r\n}"],"names":["RegisterForm","registerHandle","submitLabel","Form","onSubmit","className","type","placeholder","name","required","minLength","maxLength","Button","variant","LoginForm","loginHandle","controlId","BusinessCardModel","description","address","phone","imageUrl","this","BusinessRegister","navigate","useNavigate","useState","registerCredentials","setRegisterCredentials","createBusinessCardHandle","event","preventDefault","card","target","businessName","value","businessDescription","businessAddress","businessPhone","businessImageUrl","registerLocalStorage","email","password","UserType","toast","position","regCred","checkUserExistance"],"sourceRoot":""}