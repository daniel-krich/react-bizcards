{"version":3,"file":"static/js/590.d26f3a81.chunk.js","mappings":"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","sources":["features/authentication/forms/RegisterForm.jsx","features/authentication/forms/LoginForm.jsx","models/BusinessCardModel.js","pages/BusinessRegister.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nexport default function RegisterForm({ registerHandle, submitLabel }) {\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        registerHandle(event);\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group className='mb-3'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter your name\" name=\"name\" />\r\n            </Form.Group>\r\n            <Form.Group className='mb-3'>\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" />\r\n            </Form.Group>\r\n            <Form.Group className='mb-3'>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" />\r\n            </Form.Group>\r\n            <Button variant=\"dark\" type=\"submit\">\r\n                {submitLabel}\r\n            </Button>\r\n        </Form>\r\n    );\r\n}","import { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nexport default function LoginForm({ loginHandle }) {\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        loginHandle(event);\r\n    };\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group className='mb-3' controlId=\"formEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    name='email'\r\n                />\r\n            </Form.Group>\r\n\r\n            <Form.Group className='mb-3' controlId=\"formPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    name='password'\r\n                />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"dark\" type=\"submit\">\r\n                Login\r\n            </Button>\r\n        </Form>\r\n    );\r\n}","export class BusinessCardModel {\r\n    constructor(name, description, address, phone, imageUrl) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.address = address;\r\n        this.phone = phone;\r\n        this.imageUrl = imageUrl;\r\n    }\r\n}","import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { registerLocalStorage, checkUserExistance } from '../services/authService';\r\nimport { Container } from 'react-bootstrap';\r\nimport { RegisterForm } from '../features/authentication';\r\nimport { UserType } from '../models/UserModel';\r\nimport { toast } from 'react-toastify';\r\nimport { CreateBusinessCard } from '../components';\r\nimport { BusinessCardModel } from '../models/BusinessCardModel';\r\n\r\nexport default function BusinessRegister() {\r\n    const navigate = useNavigate();\r\n    const [registerCredentials, setRegisterCredentials] = useState(null);\r\n\r\n    const handleSubmitRegister = (event) => {\r\n        event.preventDefault();\r\n        const regCred = {\r\n            email: event.target.email.value,\r\n            password: event.target.password.value,\r\n            name: event.target.name.value,\r\n            type: UserType.Business\r\n        };\r\n        if (!checkUserExistance(regCred.email)) {\r\n            setRegisterCredentials(regCred);\r\n        }\r\n        else {\r\n            toast.error('Email already exists.', { position: toast.POSITION.TOP_RIGHT });\r\n        }\r\n    };\r\n\r\n    const handleSubmitCard = (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const card = new BusinessCardModel(event.target.businessName.value,\r\n                event.target.businessDescription.value,\r\n                event.target.businessAddress.value,\r\n                event.target.businessPhone.value,\r\n                event.target.businessImageUrl.value);\r\n\r\n            registerLocalStorage(registerCredentials.email, registerCredentials.password, registerCredentials.name, UserType.Business, [card]);\r\n            toast.success(`Registration completed, ${registerCredentials.name}`, { position: toast.POSITION.TOP_RIGHT });\r\n            navigate('/login');\r\n        }\r\n        catch {\r\n            toast.error('Email already exists.', { position: toast.POSITION.TOP_RIGHT });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"bg-white rounded p-4\">\r\n            <h1>Business Registration</h1>\r\n            {\r\n                registerCredentials ?\r\n                    <CreateBusinessCard createBusinessCardHandle={handleSubmitCard} submitLabel=\"Finish registration\" />\r\n                    :\r\n                    <RegisterForm registerHandle={handleSubmitRegister} submitLabel=\"Continue\" />\r\n            }\r\n        </Container>\r\n    );\r\n}"],"names":["RegisterForm","registerHandle","submitLabel","Form","onSubmit","event","preventDefault","className","type","placeholder","name","Button","variant","LoginForm","loginHandle","controlId","BusinessCardModel","description","address","phone","imageUrl","this","BusinessRegister","navigate","useNavigate","useState","registerCredentials","setRegisterCredentials","createBusinessCardHandle","card","target","businessName","value","businessDescription","businessAddress","businessPhone","businessImageUrl","registerLocalStorage","email","password","UserType","toast","position","regCred","checkUserExistance"],"sourceRoot":""}